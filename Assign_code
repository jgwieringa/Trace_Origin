library(adegenet)



labo_te=read.csv("labo-ICPMS-finalconc.csv")
labo_loc=labo_te[,-4:-27]
labo_loc=labo_loc[,-1]

labo_te_pc=labo_te[,-1:-3]


te.graph=chooseCN(labo_loc,type=5,d1=4,d2=12)

te.spca1=spca(labo_te_pc,xy=labo_loc,cn=te.graph,scannf=FALSE)
te.spca1

odds=3

data=cbind(labo_loc, te.spca1$ls[,1])
###Average of all sites
te.sd=1.98 ####Calculated in arcmap for within site variation
###Highest site
#te.sd=3.89


####Assign using spca values
assign <- list() # create an empty list; after the assignment, the list will contain one dataframe for each individual
for(i in 1:nrow(data)){    
  prob <- numeric()
  for(j in 1:nrow(basemap.cca)){  # loops through each row of the basemap
    prob[j] <- dnorm(data$`te.spca1$ls[, 1]`[i], mean = basemap.cca$sPCA[j], te.sd) # probability that indv i originated from basemap cell j
  }
  
  rel.prob <- prob/max(prob) # calculate relative probability of originating in each raster cell
  occ <- ifelse(rel.prob < (odds-1)/odds , 0,1) # convert relative probs to "likely" or "unlikely"
  assign[[i]] <- data.frame(id = basemap.cca$sPCA, x = basemap.cca$Longitude, y = basemap.cca$Latitude, z = rel.prob, o = occ) # create data from with raster xy, rel prob and occ. for indv. i
}



###Creating figures
for(i in 1:nrow(data)){
  ####Creating assignment maps
  ind=assign[[i]]  ####Pulling out individual
  indb=ind[,-1]  ####Removing the ID column
  ind_prob=indb[,-4]
  ind_yn=indb[,-3]
  
  ###creating probability raster
  ra=rasterFromXYZ(ind_prob)
  fn=paste(i, '_prob.tif', sep = '')
  writeRaster(ra,fn,format='GTiff',overwrite=TRUE)
  
  fn=paste(i, '_prob.pdf', sep = '')
  pdf(file=fn)
  plot(ra)
  points(x=data[i,]$Long,y=data[i,]$Lat, col='black',pch=16)
  dev.off()
  
  ###Creaing yes/no raster
  ra=rasterFromXYZ(ind_yn)
  fn=paste(i, '_yn.tif', sep = '')
  writeRaster(ra,fn,format='GTiff',overwrite=TRUE)
  
  fn=paste(i, '_yn.pdf', sep = '')
  pdf(file=fn)
  plot(ra)
  points(x=data[i,]$Long,y=data[i,]$Lat, col='black',pch=16)
  dev.off()
  
}



####Next step
#Write this code as a leave one out analysis.
#Extract value at point is important to determine the best threshold, and how often we are right

###Start of extract step
point=matrix(c(data[3,]$Long,y=data[3,]$Lat),nrow=1,ncol=2)
extract(ra, point)
